<Activity mc:Ignorable="sap sap2010" x:Class="Main_workflow_for_Poco_Loco" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_mmTransactionItem" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="in_intTransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_strFolderWithEmailAttachments" Type="InArgument(x:String)" />
    <x:Property Name="in_dicConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_strCustomerNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_dtUnload" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtLoad" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtMission" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtDossier" Type="InArgument(sd:DataTable)" />
    <x:Property Name="io_dtTransactionFeedbacks" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_dtProducts" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_strCustomerXMLFolder" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1159,837</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_workflow_for_Poco_Loco_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="476,468" sap2010:WorkflowViewState.IdRef="Sequence_20">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,376" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Main_workflow_for_Poco_Loco" sap:VirtualizedContainerService.HintSize="713,4137" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="sxl:XElement" Name="xeDossiers" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="sxl:XElement">[xeDossiers]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sxl:XElement">[new XElement("Dossiers")]</InArgument>
            </Assign.Value>
          </Assign>
          <Sequence DisplayName="Read Poco Loco Files" sap:VirtualizedContainerService.HintSize="671,3642" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="snm:Attachment" CurrentIndex="{x:Null}" DisplayName="For Each attachment from a Poco Loco email" sap:VirtualizedContainerService.HintSize="629,3550" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_mmTransactionItem.Attachments]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="snm:Attachment">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="snm:Attachment" Name="currentAttachment" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do this for every attachment from a Poco Loco email" sap:VirtualizedContainerService.HintSize="593,3426" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[currentAttachment.Name.EndsWith(&quot;.pdf&quot;)]" DisplayName="If the attachment from a Poco Loco email ends with '.pdf'" sap:VirtualizedContainerService.HintSize="551,3334" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence DisplayName="Do this for a Poco Loco PDF" sap:VirtualizedContainerService.HintSize="515,3147" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="strPdfText" />
                            <Variable x:TypeArguments="sxl:XElement" Name="xeDossier" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign attachments name to feedback data table" sap:VirtualizedContainerService.HintSize="473,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[io_dtTransactionFeedbacks(in_intTransactionNumber - 1)("Attachment name")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[currentAttachment.Name]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[in_strFolderWithEmailAttachments + currentAttachment.Name]" sap:VirtualizedContainerService.HintSize="473,51" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[strPdfText]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ReadPDFText>
                          <ui:WriteTextFile File="{x:Null}" DisplayName="Debug - Write strPdfText before doing regular expressions on it" FileName="[in_dicConfig(&quot;Resource folder&quot;).ToString + &quot;Temp\PdfExtracts\PdfExtractPocoLocoBeforeRegex.txt&quot;]" sap:VirtualizedContainerService.HintSize="473,51" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[strPdfText]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WriteTextFile>
                          <ui:Replace sap2010:Annotation.AnnotationText="A page break exists of the footer and header combined with some enter at the beginning and end." BuilderPattern="Page:(.*[\r\n\x0B\x0C\u0085\u2028\u2029]){3}.+KBC 472-1019801-22" DisplayName="Replace the page breaks in the strPdfText with empty space" sap:VirtualizedContainerService.HintSize="473,123" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[strPdfText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;Page:(.*[\\r\\n\\x0B\\x0C\\u0085\\u2028\\u2029]){3}.+KBC 472-1019801-22&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Page:(.*[\r\n\x0B\x0C\u0085\u2028\u2029]){3}.+KBC 472-1019801-22" RegexOption="IgnoreCase, Compiled" Replacement="Page Break was here!!" Result="[strPdfText]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:Replace>
                          <Assign sap2010:Annotation.AnnotationText="I was not able to remove an enter with the regular exprssion above this activity.&#xA;This assign makes it able to do that." DisplayName="Replace &quot;Page Break was here!!&quot; with a white space" sap:VirtualizedContainerService.HintSize="473,117" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strPdfText]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strPdfText.Replace(Environment.NewLine + "Page Break was here!!","")]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:WriteTextFile File="{x:Null}" DisplayName="Debug - Write strPdfText after doing regular expressions on it" FileName="[in_dicConfig(&quot;Resource folder&quot;).ToString + &quot;Temp\PdfExtracts\PdfExtractPocoLocoAfterRegex.txt&quot;]" sap:VirtualizedContainerService.HintSize="473,51" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[strPdfText]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WriteTextFile>
                          <Sequence DisplayName="Get main info" sap:VirtualizedContainerService.HintSize="473,1510" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="strTransportType" />
                              <Variable x:TypeArguments="x:String" Name="strResource" />
                              <Variable x:TypeArguments="x:String" Name="strNatureOfGoods" />
                              <Variable x:TypeArguments="x:String" Name="strDossierType" />
                              <Variable x:TypeArguments="x:String" Name="strPlanningsGroup" />
                              <Variable x:TypeArguments="x:String" Name="strReference" />
                              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuLoadingReferences" />
                              <Variable x:TypeArguments="x:String" Name="strLoadingReference" />
                              <Variable x:TypeArguments="x:String" Name="strDate" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ClearDataTable DataTable="[in_dtDossier]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="431,79" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                            <Sequence DisplayName="Get the loading reference" sap:VirtualizedContainerService.HintSize="431,66" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuVATNumbers" />
                                <Variable x:TypeArguments="x:String" Name="strTempLoadingReferences" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Matches BuilderPattern="Collection reference.+" DisplayName="Get all the loading references out of the PDF text" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[strPdfText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;Collection reference.+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Collection reference.+" RegexOption="IgnoreCase, Compiled" Result="[enuLoadingReferences]" />
                              <Assign DisplayName="Only use the first loading reference" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strLoadingReference]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[enuLoadingReferences(0).ToString.Replace("Collection reference ", "")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[strLoadingReference IsNot &quot;N\A&quot;]" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="867,889" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MultipleAssign DisplayName="Assign temp. loading ref. with loading ref. and empty loading ref." sap:VirtualizedContainerService.HintSize="825,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                      <ui:MultipleAssign.AssignOperations>
                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:String">[strTempLoadingReferences]</OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">[strLoadingReference]</InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:String">[strLoadingReference]</OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                        </scg:List>
                                      </ui:MultipleAssign.AssignOperations>
                                    </ui:MultipleAssign>
                                    <If Condition="[strTempLoadingReferences.Contains(&quot;,&quot;)]" sap:VirtualizedContainerService.HintSize="825,626" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="476,468" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,276" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[strTempLoadingReferences.Split(&quot;,&quot;c)]">
                                            <ui:ForEach.Body>
                                              <ActivityAction x:TypeArguments="x:String">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:String" Name="loadingReference" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[strLoadingReference]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[strLoadingReference + "+" + loadingReference.Trim]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEach.Body>
                                          </ui:ForEach>
                                          <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strLoadingReference]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[strLoadingReference.Remove(0,1)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strLoadingReference]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[strTempLoadingReferences.Trim]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <Assign sap2010:Annotation.AnnotationText="The last occurence has the load reference&#xA;" DisplayName="Split the string in white spaces and get the last string" sap:VirtualizedContainerService.HintSize="334,102" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strLoadingReference]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strLoadingReference.Split(" "c).Last.ToString.Trim]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                            </Sequence>
                            <Sequence DisplayName="Get date" sap:VirtualizedContainerService.HintSize="431,251" sap2010:WorkflowViewState.IdRef="Sequence_19">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuDates" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Matches BuilderPattern="Date.+" DisplayName="Get the dates" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[strPdfText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;Date.+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Date.+" RegexOption="IgnoreCase, Compiled" Result="[enuDates]" />
                              <Assign DisplayName="Assign the first date and change the format" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(enuDates(0).ToString.Replace("Date:", "").Trim, "dd/MM/yyyy", Nothing).ToString("yyyy/MM/dd")]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <ui:MultipleAssign DisplayName="Assing fixed values for dtDossier" sap:VirtualizedContainerService.HintSize="431,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strDossierType]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">L</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strPlanningsGroup]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">Trading</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strTransportType]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">GR</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_strCustomerNumber, strDate, strDossierType, strPlanningsGroup, strLoadingReference, strLoadingReference, strTransportType}]" DataTable="[in_dtDossier]" DisplayName="Add Data Row for dtDossier" sap:VirtualizedContainerService.HintSize="431,185" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                            <ui:ClearDataTable DataTable="[in_dtMission]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="431,79" sap2010:WorkflowViewState.IdRef="ClearDataTable_2" />
                            <ui:MultipleAssign DisplayName="Assign fixed values for dtMission" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strResource]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">TAUT</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strNatureOfGoods]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">Food</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strNatureOfGoods, strResource}]" DataTable="[in_dtMission]" DisplayName="Add Data Row to dtMission" sap:VirtualizedContainerService.HintSize="431,185" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                          </Sequence>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Get_loading_info workflow" sap:VirtualizedContainerService.HintSize="473,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\Client_workflows\Poco_Loco_workflows\Poco_Loco_Get_loading_info.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_strPdfText">[strPdfText]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicConfig">[in_dicConfig]</InArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtLoad">[in_dtLoad]</InOutArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="io_dtProducts">[in_dtProducts]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Get_all_unloading_info workflow" sap:VirtualizedContainerService.HintSize="473,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\Client_workflows\Poco_Loco_workflows\Poco_Loco_Get_unloading_info.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_strPdfText">[strPdfText]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicConfig">[in_dicConfig]</InArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtUnload">[in_dtUnload]</InOutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="473,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="628,1005" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope for writing away information" sap:VirtualizedContainerService.HintSize="586,913" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                                  <ueab:ExcelProcessScopeX.Body>
                                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Write away data tables for Poco Loco " sap:VirtualizedContainerService.HintSize="552,827" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel file to write information to" sap:VirtualizedContainerService.HintSize="510,735" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" UseTemplate="True" WorkbookPath="[(in_strFolderWithEmailAttachments + &quot;Information&quot;)]">
                                          <ueab:ExcelApplicationCard.Body>
                                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="xlFile" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,446" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ueab:WriteRangeX Destination="[xlFile.Sheet(&quot;Unloading info&quot;)]" DisplayName=" Write unloading info DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[in_dtUnload]" />
                                                <ueab:WriteRangeX Destination="[xlFile.Sheet(&quot;Loading address&quot;)]" DisplayName=" Write loading address DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[in_dtLoad]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </ueab:ExcelApplicationCard.Body>
                                        </ueab:ExcelApplicationCard>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelProcessScopeX.Body>
                                </ueab:ExcelProcessScopeX>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Create Missions workflow" sap:VirtualizedContainerService.HintSize="473,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Workflows\Create Missions.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_xeDossier">[xeDossier]</InOutArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtDossier">[in_dtDossier]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtMission">[in_dtMission]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtUnload">[in_dtUnload]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtLoad">[in_dtLoad]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtProducts">[in_dtProducts]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicConfig">[in_dicConfig]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <InvokeMethod DisplayName="XML - Add xeDossier to xeDossiers" sap:VirtualizedContainerService.HintSize="473,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="sxl:XElement">[xeDossiers]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:Object">[xeDossier]</InArgument>
                          </InvokeMethod>
                          <ui:LogMessage DisplayName="Debug - End of Poco Loco PDF" sap:VirtualizedContainerService.HintSize="473,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;End for Poco Loco pdf: &quot; + currentAttachment.Name]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
          <ui:WriteTextFile File="{x:Null}" DisplayName="XML - Write XML file" FileName="[in_strCustomerXMLFolder + in_intTransactionNumber.ToString + &quot;_PocoLoco_&quot; + in_strCustomerNumber +&quot;.xml&quot;]" sap:VirtualizedContainerService.HintSize="671,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="[&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot; encoding=&quot;&quot;UTF-8&quot;&quot; ?&gt;&quot; + Environment.NewLine +&#xA;xeDossiers.ToString]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="671,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End for Poco Loco mail&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:ArgumentException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="ex" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_4" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_5" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:NullReferenceException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_9" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="si:IOException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="si:IOException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_8" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:InvalidOperationException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:InvalidOperationException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:InvalidOperationException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_7" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_6" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>