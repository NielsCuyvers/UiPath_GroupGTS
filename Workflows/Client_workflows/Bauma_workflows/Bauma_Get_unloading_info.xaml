<Activity mc:Ignorable="sap sap2010" x:Class="Get_the_unloading_info" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strPdfText" Type="InArgument(x:String)" />
    <x:Property Name="in_dicConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_dtUnloadInfo" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1159,837</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Get_the_unloading_info_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="70">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="476,468" sap2010:WorkflowViewState.IdRef="Sequence_101">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,376" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="Example of text to work with:&#xA;Déchargement 01&#xA;PILLAUD AGENCE DE EPERNAY/MAGENTA&#xA;90, RUE A. THEVENET&#xA;FR-51530  MAGENTA&#xA;Bon de livraison N° Commentaire: Date de livraison:&#xA;32203569&#xA;Déchargement 02&#xA;AGENCE DE CHÂTEAU-THIERRY&#xA;ZI DE L'OMOIS CS 10215&#xA;FR-02400  EPAUX-BEZU&#xA;Bon de livraison N° Commentaire: Date de livraison:&#xA;* 32203137&#xA;* 32203278&#xA;* 32203506&#xA;* 32203532&#xA;* 32203533&#xA;Déchargement 03&#xA;TOUT FAIRE MATERIAUX SEZANNE&#xA;ZONE DE L'ORMELOT&#xA;FR-51120  SEZANNE&#xA;Bon de livraison N° Commentaire: Date de livraison:&#xA;* 32203227&#xA;* 32203274&#xA;* 32203328&#xA;* 32203572&#xA;* 32203573&#xA;* 32203606&#xA;&#xA;Attention," DisplayName="Get the unloading info in a Bauma PDF" sap:VirtualizedContainerService.HintSize="515,1255" sap2010:WorkflowViewState.IdRef="Sequence_100">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Default="0" Name="intUnloadingPointsCounter" />
            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuUnloadingInfos" />
            <Variable x:TypeArguments="x:String" Name="strFullUnloadingInfo" />
            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuUnloadingPoints" />
            <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strDeliveryDate" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ClearDataTable DataTable="[io_dtUnloadInfo]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="473,79" sap2010:WorkflowViewState.IdRef="ClearDataTable_2" />
          <Sequence DisplayName="Clean up" sap:VirtualizedContainerService.HintSize="473,66" sap2010:WorkflowViewState.IdRef="Sequence_74">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="(Déchargement 01((?:.|\n)*)Attention,)+" DisplayName="Get all the loading addresses out of the PDF text" sap:VirtualizedContainerService.HintSize="509,59" sap2010:WorkflowViewState.IdRef="Matches_11" Input="[in_strPdfText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(Déchargement 01((?:.|\\n)*)Attention,)&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(Déchargement 01((?:.|\n)*)Attention,)+" RegexOption="IgnoreCase, Compiled" Result="[enuUnloadingInfos]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:Matches>
            <Assign DisplayName="Get the first unloading info" sap:VirtualizedContainerService.HintSize="509,60" sap2010:WorkflowViewState.IdRef="Assign_54">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFullUnloadingInfo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[enuUnloadingInfos(0).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:Replace sap2010:Annotation.AnnotationText="This will make it easier to itterate over all the unloading points." BuilderPattern="Déchargement 01" DisplayName="Replace 'Déchargement 01' with 'Unloading point begin'" sap:VirtualizedContainerService.HintSize="509,108" sap2010:WorkflowViewState.IdRef="Replace_19" Input="[strFullUnloadingInfo]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;Déchargement 01&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Déchargement 01" RegexOption="IgnoreCase, Compiled" Replacement="Unloading point begin" Result="[strFullUnloadingInfo]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:Replace>
            <ui:Replace sap2010:Annotation.AnnotationText="This will make it easier to itterate over all the unloading points." BuilderPattern="Attention," DisplayName="Replace the last word with 'Unloading point end'" sap:VirtualizedContainerService.HintSize="509,101" sap2010:WorkflowViewState.IdRef="Replace_20" Input="[strFullUnloadingInfo]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;Attention,&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Attention," RegexOption="IgnoreCase, Compiled" Replacement="Unloading point end" Result="[strFullUnloadingInfo]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:Replace>
            <ui:Replace sap2010:Annotation.AnnotationText="This will make it easier to itterate over all the unloading points." BuilderPattern="(Déchargement.*[\r\n\x0B\x0C\u0085\u2028\u2029])+" DisplayName="Replace 'Déchargement' with 'Unloading point end\nUnloading point begin'" sap:VirtualizedContainerService.HintSize="509,101" sap2010:WorkflowViewState.IdRef="Replace_21" Input="[strFullUnloadingInfo]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(Déchargement.*[\\r\\n\\x0B\\x0C\\u0085\\u2028\\u2029])&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(Déchargement.*[\r\n\x0B\x0C\u0085\u2028\u2029])+" RegexOption="IgnoreCase, Compiled" Replacement="[&quot;Unloading point end&quot; + Environment.NewLine + &quot;Unloading point begin&quot; + Environment.NewLine]" Result="[strFullUnloadingInfo]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:Replace>
            <ui:Matches BuilderPattern="(?:(Déchargement((?:.|\n)+?)Déchargement))+" DisplayName="Seperate all unloading points" sap:VirtualizedContainerService.HintSize="509,59" sap2010:WorkflowViewState.IdRef="Matches_12" Input="[strFullUnloadingInfo]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(Déchargement((?:.|\\n)+?)Déchargement)&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?:(Unloading point begin((?:.|\n)+?)Unloading point end))+" RegexOption="IgnoreCase, Compiled" Result="[enuUnloadingPoints]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:Matches>
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="This is extracted from the main information. Not from the unloading points." DisplayName="Get delivery date" sap:VirtualizedContainerService.HintSize="473,353" sap2010:WorkflowViewState.IdRef="Sequence_75">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuDeliveryDates" />
              <Variable x:TypeArguments="x:String" Name="strTempDeliveryDate" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="Date de chargement:.+" DisplayName="Get all delivery dates" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="Matches_13" Input="[in_strPdfText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;Date de chargement:.+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Date de chargement:.+" RegexOption="IgnoreCase, Compiled" Result="[enuDeliveryDates]" />
            <ui:MultipleAssign DisplayName="Get the first match of delivery date and change the date format" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_14">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strTempDeliveryDate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[enuDeliveryDates(0).ToString.Replace("Date de chargement: ", "").Trim]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strDeliveryDate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(strTempDeliveryDate,"dd/MM/yyyy",Nothing).ToString("yyyy/MM/dd")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
          </Sequence>
          <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For each unloading point in a Bauma PDF" sap:VirtualizedContainerService.HintSize="473,51" sap2010:WorkflowViewState.IdRef="ForEach`1_35" Values="[enuUnloadingPoints]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="str:Match">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="str:Match" Name="expUnloadingPoint" />
                </ActivityAction.Argument>
                <Sequence sap2010:Annotation.AnnotationText="Example of text to work with:&#xA;Unloading point begin&#xA;AGENCE DE CHÂTEAU-THIERRY&#xA;ZI DE L'OMOIS CS 10215&#xA;FR-02400  EPAUX-BEZU&#xA;Bon de livraison N° Commentaire: Date de livraison:&#xA;* 32203137&#xA;* 32203278&#xA;* 32203506&#xA;* 32203532&#xA;* 32203533&#xA;Unloading point end" DisplayName="Do this for each unloading point in a Bauma PDF" sap:VirtualizedContainerService.HintSize="473,1499" sap2010:WorkflowViewState.IdRef="Sequence_99">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strUnloadingPoint" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strResultWithAllReferenceNumbers" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strName" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strHouseNumber" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strStreet" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strZipCode" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strDeliveryTimeBegin" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strCountry" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strCity" />
                    <Variable x:TypeArguments="x:String" Default="[in_dicConfig(&quot;Empty value&quot;).ToString]" Name="strDeliveryTimeEnd" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Init for every unloading point" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strUnloadingPoint]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[expUnloadingPoint.ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Int32">[intUnloadingPointsCounter]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Int32">[intUnloadingPointsCounter + 1]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                  <Sequence DisplayName="Clean up " sap:VirtualizedContainerService.HintSize="431,66" sap2010:WorkflowViewState.IdRef="Sequence_76">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Replace BuilderPattern="(Unloading point begin.*[\r\n\x0B\x0C\u0085\u2028\u2029])+" DisplayName="Replace 'Unloading point begin' with &quot;&quot;" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Replace_22" Input="[strUnloadingPoint]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(Unloading point begin.*[\\r\\n\\x0B\\x0C\\u0085\\u2028\\u2029])&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(Unloading point begin.*[\r\n\x0B\x0C\u0085\u2028\u2029])+" RegexOption="IgnoreCase, Compiled" Result="[strUnloadingPoint]">
                      <ui:Replace.Replacement>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:Replace.Replacement>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:Replace>
                    <ui:Replace BuilderPattern="([\r\n\x0B\x0C\u0085\u2028\u2029]Unloading point end.*)+" DisplayName="Replace 'Unloading point end' with &quot;&quot;" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Replace_23" Input="[strUnloadingPoint]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;([\\r\\n\\x0B\\x0C\\u0085\\u2028\\u2029]Unloading point end.*)&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="([\r\n\x0B\x0C\u0085\u2028\u2029]Unloading point end.*)+" RegexOption="IgnoreCase, Compiled" Result="[strUnloadingPoint]">
                      <ui:Replace.Replacement>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:Replace.Replacement>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:Replace>
                  </Sequence>
                  <ui:MultipleAssign DisplayName="Assign fixed values" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_16">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strDeliveryTimeBegin]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">08:00</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strDeliveryTimeEnd]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">16:00</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <Sequence sap2010:Annotation.AnnotationText="Example unloading point address:&#xA;Unloading point begin&#xA;AGENCE DE CHÂTEAU-THIERRY&#xA;ZI DE L'OMOIS CS 10215&#xA;FR-02400  EPAUX-BEZU" DisplayName="Get the address from the unloading point" sap:VirtualizedContainerService.HintSize="431,183" sap2010:WorkflowViewState.IdRef="Sequence_91">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuAdresses" />
                      <Variable x:TypeArguments="x:String" Name="strAddress" />
                      <Variable x:TypeArguments="x:String" Name="strStreetAndNumber" />
                      <Variable x:TypeArguments="x:Boolean" Name="bHasANumber" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Matches BuilderPattern="^((?:.|\n)+)Bon de livraison" DisplayName="Search for the address of the unloading point" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="Matches_14" Input="[strUnloadingPoint]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;^((?:.|\\n)+)Bon de livraison&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="^((?:.|\n)+)Bon de livraison" RegexOption="IgnoreCase, Compiled" Result="[enuAdresses]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:Matches>
                    <Assign DisplayName="Get the first result from the address search" sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strAddress]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[enuAdresses(0).ToString + Environment.NewLine]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:Replace BuilderPattern="[\r\n\x0B\x0C\u0085\u2028\u2029]Bon de livraison.+" DisplayName="Remove the last line from the found unloading point address" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="Replace_24" Input="[strAddress]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;[\\r\\n\\x0B\\x0C\\u0085\\u2028\\u2029]Bon de livraison.+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[\r\n\x0B\x0C\u0085\u2028\u2029]Bon de livraison.+" RegexOption="IgnoreCase, Compiled" Result="[strAddress]">
                      <ui:Replace.Replacement>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:Replace.Replacement>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:Replace>
                    <ui:MultipleAssign DisplayName="Replace the newlines with ';' and get the address info out of the text" sap:VirtualizedContainerService.HintSize="431,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_17">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strAddress]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[strAddress.Replace(Environment.NewLine, ";")]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strName]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[strAddress.Split(";"c)(0)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strStreetAndNumber]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[strAddress.Split(";"c)(1)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:IsMatch BuilderPattern="\d+" DisplayName="Regular expression to see if a string contains a number" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="IsMatch_7" Input="[strStreetAndNumber]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;DIG&quot;,&quot;OperationName&quot;:&quot;Digit&quot;,&quot;OperationValue&quot;:&quot;\\d&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\d+" RegexOption="IgnoreCase, Compiled" Result="[bHasANumber]" />
                    <If Condition="[bHasANumber]" DisplayName="Check if strStreetAndNumber has a house number" sap:VirtualizedContainerService.HintSize="431,51" sap2010:WorkflowViewState.IdRef="If_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Do this if strStreetAndNumber has a house number" sap:VirtualizedContainerService.HintSize="1333,967" sap2010:WorkflowViewState.IdRef="Sequence_82">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[strStreetAndNumber.Contains(&quot;,&quot;)]" DisplayName="Check if strStreetAndNumber contains a ','" sap:VirtualizedContainerService.HintSize="1291,875" sap2010:WorkflowViewState.IdRef="If_17">
                            <If.Then>
                              <Sequence DisplayName="Do this if strStreetAndNumber contains a ','" sap:VirtualizedContainerService.HintSize="773,717" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each part of the strStreetAndNumber string" sap:VirtualizedContainerService.HintSize="731,625" sap2010:WorkflowViewState.IdRef="ForEach`1_32" Values="[strStreetAndNumber.Split(&quot;,&quot;c)]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Do this for each part of the strStreetAndNumber string" sap:VirtualizedContainerService.HintSize="695,501" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:IsMatch DisplayName="Regular expression to see if a string contains a number" sap:VirtualizedContainerService.HintSize="653,59" sap2010:WorkflowViewState.IdRef="IsMatch_8" Input="[item]" IsBuilderTabModified="False" Pattern="%[\d]" RegexOption="IgnoreCase, Compiled" Result="[bHasANumber]" />
                                        <If Condition="[bHasANumber]" DisplayName="If this part of the string contains a number" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_16">
                                          <If.Then>
                                            <Sequence DisplayName="This item is the house number" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="numberPos" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign house number" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strHouseNumber]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="This item is the street" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign street" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strStreet]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Check if strStreetAndNumber does not contains a ','" sap:VirtualizedContainerService.HintSize="473,223" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign DisplayName="Assign street and house number" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_18">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[strHouseNumber]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[strStreetAndNumber.Split(" "c).Last]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[strStreet]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[strStreetAndNumber.Remove(strStreetAndNumber.IndexOf(strHouseNumber))]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Do this if strStreetAndNumber does not have a house number" sap:VirtualizedContainerService.HintSize="473,223" sap2010:WorkflowViewState.IdRef="Sequence_83">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign DisplayName="Assign street and house number" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_19">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[strStreet]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[strStreetAndNumber.Trim]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[strHouseNumber]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[in_dicConfig("Empty value").ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap2010:Annotation.AnnotationText="Get the zipcode and city from the whole address." DisplayName="Get zipcode part 1" sap:VirtualizedContainerService.HintSize="431,102" sap2010:WorkflowViewState.IdRef="Assign_58">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strZipCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strAddress.Split(";"c)(2)]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Get the zipcode from the string." DisplayName="Get zipcode part 2" sap:VirtualizedContainerService.HintSize="431,91" sap2010:WorkflowViewState.IdRef="Assign_59">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strZipCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strZipCode.Split(" "c).First]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Sequence DisplayName="Get country" sap:VirtualizedContainerService.HintSize="431,66" sap2010:WorkflowViewState.IdRef="Sequence_90">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strZipCodeCountry" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[strZipCode.IsNumeric = False]" DisplayName="Check if the zipcode does not only exists of a numeric value" sap:VirtualizedContainerService.HintSize="953,868" sap2010:WorkflowViewState.IdRef="If_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Check if the zipcode does not only exists of a numeric value" sap:VirtualizedContainerService.HintSize="917,681" sap2010:WorkflowViewState.IdRef="Sequence_88">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[strZipCode.Contains(&quot; &quot;)]" DisplayName="Check if the zipcode contains a white space" sap:VirtualizedContainerService.HintSize="875,589" sap2010:WorkflowViewState.IdRef="If_20">
                              <If.Then>
                                <Sequence DisplayName="Do this if the zipcode contains a white space" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strZipCodeCountry]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strZipCode.Split(" "c).First]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Do this if the zipcode does not contains a white space" sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[strZipCode.Contains(&quot;-&quot;)]" DisplayName="Check if the zipcode contains a '-'" sap:VirtualizedContainerService.HintSize="484,339" sap2010:WorkflowViewState.IdRef="If_19">
                                    <If.Then>
                                      <Sequence DisplayName="Do this if the zipcode contains a '-'" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strZipCodeCountry]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strZipCode.Split("-"c).First]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_86">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <Switch x:TypeArguments="x:String" DisplayName="Switch through countries" Expression="[strZipCodeCountry]" sap:VirtualizedContainerService.HintSize="953,226" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                        <Assign x:Key="BE" DisplayName="Assign country to 'Belgium'" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strCountry]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Belgium</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign x:Key="NL" DisplayName="Assign country to 'The Netherlands'" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strCountry]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">The Netherlands</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign x:Key="L" DisplayName="Assign country to 'Luxemburg'" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strCountry]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Luxemburg</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign x:Key="FR" DisplayName="Assign country to 'France'" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strCountry]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">France</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign x:Key="B" DisplayName="Assign country to 'Belgium'" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strCountry]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Belgium</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Switch>
                    </Sequence>
                  </Sequence>
                  <Sequence sap2010:Annotation.AnnotationText="Example unloading point references:&#xA;Bon de livraison N° Commentaire: Date de livraison:&#xA;* 32203137&#xA;* 32203278&#xA;* 32203506&#xA;* 32203532&#xA;* 32203533" DisplayName="Get the references from the unloading point" sap:VirtualizedContainerService.HintSize="431,228" sap2010:WorkflowViewState.IdRef="Sequence_95">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="enuReferenceNumbers" />
                      <Variable x:TypeArguments="x:String" Name="strReferenceNumbers" />
                      <Variable x:TypeArguments="x:Boolean" Name="bIsAListOfReferenceNumbers" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Matches BuilderPattern="Bon de livraison((?:.|\n)+)[\d]" DisplayName="Search for the reference list" sap:VirtualizedContainerService.HintSize="825,59" sap2010:WorkflowViewState.IdRef="Matches_15" Input="[strUnloadingPoint]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;Bon de livraison((?:.|\\n)+)[\\d]&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="Bon de livraison((?:.|\n)+)[\d]" RegexOption="IgnoreCase, Compiled" Result="[enuReferenceNumbers]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:Matches>
                    <Assign DisplayName="Get the first result from the reference list search" sap:VirtualizedContainerService.HintSize="825,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strReferenceNumbers]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[enuReferenceNumbers(0).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:Replace BuilderPattern="(Bon de livraison.+)" DisplayName="Remove first line of result reference numbers" sap:VirtualizedContainerService.HintSize="825,51" sap2010:WorkflowViewState.IdRef="Replace_25" Input="[strReferenceNumbers]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(Bon de livraison.+)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(Bon de livraison.+)" RegexOption="IgnoreCase, Compiled" Result="[strReferenceNumbers]">
                      <ui:Replace.Replacement>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:Replace.Replacement>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:Replace>
                    <ui:IsMatch sap2010:Annotation.AnnotationText="If there are '*' it means that there is more then one reference item in the list. Else there is just one." BuilderPattern="(\*)+" DisplayName="Checks if there is a '*' in the reference list" sap:VirtualizedContainerService.HintSize="825,123" sap2010:WorkflowViewState.IdRef="IsMatch_9" Input="[strReferenceNumbers]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(\\*)&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(\*)+" RegexOption="IgnoreCase, Compiled" Result="[bIsAListOfReferenceNumbers]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:IsMatch>
                    <If Condition="[bIsAListOfReferenceNumbers]" DisplayName="Check if there is a list of reference numbers" sap:VirtualizedContainerService.HintSize="825,1112" sap2010:WorkflowViewState.IdRef="If_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,954" sap2010:WorkflowViewState.IdRef="Sequence_93">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Replace BuilderPattern="(\* )+" DisplayName="Replace the '* ' with a empty space" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="Replace_26" Input="[strReferenceNumbers]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(\\* )&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(\* )+" RegexOption="IgnoreCase, Compiled" Result="[strReferenceNumbers]">
                            <ui:Replace.Replacement>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:Replace.Replacement>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:Replace>
                          <ui:Replace sap2010:Annotation.AnnotationText="This makes it easier to extract the data from the String." BuilderPattern="([\r\n\x0B\x0C\u0085\u2028\u2029])+" DisplayName="Replace end lines with ';'" sap:VirtualizedContainerService.HintSize="434,93" sap2010:WorkflowViewState.IdRef="Replace_27" Input="[strReferenceNumbers]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;([\\r\\n\\x0B\\x0C\\u0085\\u2028\\u2029])&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="([\r\n\x0B\x0C\u0085\u2028\u2029])+" RegexOption="IgnoreCase, Compiled" Replacement=";" Result="[strReferenceNumbers]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:Replace>
                          <Assign sap2010:Annotation.AnnotationText="The first character is a ';'." DisplayName="Remove the first charater from strReferenceNumbers" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="Assign_69">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strReferenceNumbers]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strReferenceNumbers.Remove(0,1)]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each each reference number in a list" sap:VirtualizedContainerService.HintSize="434,276" sap2010:WorkflowViewState.IdRef="ForEach`1_33" Values="[strReferenceNumbers.Split(&quot;;&quot;c)]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="referenceNumber" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do this for each reference number in a list" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers + "+" + referenceNumber]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <Assign sap2010:Annotation.AnnotationText="The first character is a '+'." DisplayName="Remove the first charater from strResultWithAllReferenceNumbers" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="Assign_71">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers.Remove(0,1)]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_94">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strReferenceNumbers]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign DisplayName="Trim reference number(s)" sap:VirtualizedContainerService.HintSize="825,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strResultWithAllReferenceNumbers.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strName, strStreet, strHouseNumber, strCountry, strZipCode, strCity, strDeliveryDate, strDeliveryTimeBegin, strDeliveryTimeEnd, strResultWithAllReferenceNumbers}]" DataTable="[io_dtUnloadInfo]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="431,185" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="431,51" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="518,752" sap2010:WorkflowViewState.IdRef="Sequence_98">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Debug - Shows the addres and all reference numbers of unload point" sap:VirtualizedContainerService.HintSize="476,660" sap2010:WorkflowViewState.IdRef="Sequence_97">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Debug - Log Bauma unloading address" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;==============&quot; + Environment.NewLine +&#xA;strUnloadingPoint + Environment.NewLine +&#xA;&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;]" />
                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,306" sap2010:WorkflowViewState.IdRef="ForEach`1_34" Values="[lstReferences]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="refNum" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_96">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Debug - Log reference" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[refNum]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                          <ui:LogMessage DisplayName="Debug - Log Bauma unloading address end" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;==============&quot;]" />
                        </Sequence>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:ArgumentException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:NullReferenceException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_6" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="si:IOException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="si:IOException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_5" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:InvalidOperationException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:InvalidOperationException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:InvalidOperationException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_4" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>