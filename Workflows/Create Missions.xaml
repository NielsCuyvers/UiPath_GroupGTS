<Activity mc:Ignorable="sap sap2010" x:Class="Create_Missions" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_xeDossier" Type="InOutArgument(sxl:XElement)" />
    <x:Property Name="in_dtDossier" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtMission" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtUnload" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtLoad" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtProducts" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dicConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1159,3460</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Create_Missions_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Create_Missions" sap:VirtualizedContainerService.HintSize="798,3395" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="intUnloadCounter" />
      <Variable x:TypeArguments="sxl:XElement" Name="xeMissions" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="XML - Initialize xeDossier and xeMissions for this PDF" sap:VirtualizedContainerService.HintSize="756,258" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="xeCustomer" />
        <Variable x:TypeArguments="x:String" Name="xeDate" />
        <Variable x:TypeArguments="x:String" Name="xeType" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="XML - Initialize xeDossier" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_20">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:MultipleAssign sap2010:Annotation.AnnotationText="To what element does the contant have to be saved.&#xA;And what data table to use." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="510,173" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="sxl:XElement">[io_xeDossier]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="sxl:XElement">[New XElement("Dossier")]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="sd:DataTable">[dtTemp]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="sd:DataTable">[in_dtDossier]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTemp]" DisplayName="For each row  io_xeDossier" sap:VirtualizedContainerService.HintSize="510,629" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do this for each row in Data Table  io_xeDossier" sap:VirtualizedContainerService.HintSize="476,514" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,422" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[dtTemp.Columns]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="currentColumn" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do this for each column  io_xeDossier" sap:VirtualizedContainerService.HintSize="280,298" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <InvokeMethod sap2010:Annotation.AnnotationText="The new element added has the title of that column.&#xA;The value is the is the the value of that column in the row." DisplayName="XML - Add new element to io_xeDossier" sap:VirtualizedContainerService.HintSize="238,206" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sxl:XElement">[io_xeDossier]</InArgument>
                          </InvokeMethod.TargetObject>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <InArgument x:TypeArguments="sxl:XElement">[new XElement(currentColumn.ToString,currentRow(currentColumn.ToString))]</InArgument>
                        </InvokeMethod>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Assign DisplayName="XML - Initialize xeMissions" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="sxl:XElement">[xeMissions]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sxl:XElement">[new XElement("Missions")]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dtUnload]" DisplayName="For each unloading point" sap:VirtualizedContainerService.HintSize="756,2831" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentRowDtUnloadingInfo" />
          </ActivityAction.Argument>
          <Sequence DisplayName="For Each Row in in_dtUnloading" sap:VirtualizedContainerService.HintSize="722,2716" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="sxl:XElement" Name="xeMission" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeUnload" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeLoad" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeDate" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeResource" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeTransportType" />
              <Variable x:TypeArguments="sxl:XElement" Name="xePlanningsGroup" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeHourTo" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeHourFrom" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeReference" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeCountry" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeCity" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeZipCode" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeHouseNumber" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeName" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeStreet" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeGoods" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeSeqNumber" />
              <Variable x:TypeArguments="sxl:XElement" Name="xeProducts" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Increase unload counter" sap:VirtualizedContainerService.HintSize="680,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[intUnloadCounter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[intUnloadCounter + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="XML - Assign new mission" sap:VirtualizedContainerService.HintSize="680,1418" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign sap2010:Annotation.AnnotationText="To what element does the contant have to be saved.&#xA;And what data table to use." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="638,204" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sxl:XElement">[xeMission]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sxl:XElement">[New XElement("Mission")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dtTemp]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[in_dtMission]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sxl:XElement">[xeSeqNumber]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sxl:XElement">[new XElement("SequenceNumber",intUnloadCounter.ToString)]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <InvokeMethod DisplayName="XML - Add xeSeqNumber xeMission" sap:VirtualizedContainerService.HintSize="638,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sxl:XElement">[xeMission]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[xeSeqNumber]</InArgument>
              </InvokeMethod>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTemp]" DisplayName="For each row in_dtMission" sap:VirtualizedContainerService.HintSize="638,908" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do this for each row in xeMission" sap:VirtualizedContainerService.HintSize="604,793" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each column in_dtMission" sap:VirtualizedContainerService.HintSize="562,701" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[dtTemp.Columns]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="currentColumn" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do this for each column in_dtMission" sap:VirtualizedContainerService.HintSize="526,577" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[currentRow(currentColumn.ToString).ToString &lt;&gt; &quot;&quot; and currentRow(currentColumn.ToString).ToString &lt;&gt; in_dicConfig(&quot;Empty value&quot;).ToString]" DisplayName="Check if the value is not empty" sap:VirtualizedContainerService.HintSize="484,485" sap2010:WorkflowViewState.IdRef="If_4">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="280,298" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InvokeMethod sap2010:Annotation.AnnotationText="The new element added has the title of that column.&#xA;The value is the is the the value of that column in the row." DisplayName="XML - Add new element to xeMission" sap:VirtualizedContainerService.HintSize="238,206" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Add">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sxl:XElement">[xeMission]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InArgument x:TypeArguments="sxl:XElement">[new XElement(currentColumn.ToString,currentRow(currentColumn.ToString))]</InArgument>
                                    </InvokeMethod>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
            <Sequence DisplayName="XML - Assign loading address details" sap:VirtualizedContainerService.HintSize="680,66" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign sap2010:Annotation.AnnotationText="To what element does the contant have to be saved.&#xA;And what data table to use." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="638,173" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sxl:XElement">[xeLoad]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sxl:XElement">[New XElement("Load")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dtTemp]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[in_dtLoad]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTemp]" DisplayName="For each row in_dtLoadingInfo" sap:VirtualizedContainerService.HintSize="638,908" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do this for each row in Data Table in_dtLoadingInfo" sap:VirtualizedContainerService.HintSize="604,793" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,701" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[dtTemp.Columns]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="currentColumn" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do this for each column in_dtLoadingInfo" sap:VirtualizedContainerService.HintSize="526,577" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[currentRow(currentColumn.ToString).ToString &lt;&gt; &quot;&quot; and currentRow(currentColumn.ToString).ToString &lt;&gt; in_dicConfig(&quot;Empty value&quot;).ToString]" DisplayName="Check if the value is not empty" sap:VirtualizedContainerService.HintSize="484,485" sap2010:WorkflowViewState.IdRef="If_3">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="280,298" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InvokeMethod sap2010:Annotation.AnnotationText="The new element added has the title of that column.&#xA;The value is the is the the value of that column in the row." DisplayName="XML - Add new element to xeLoad" sap:VirtualizedContainerService.HintSize="238,206" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sxl:XElement">[xeLoad]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InArgument x:TypeArguments="sxl:XElement">[new XElement(currentColumn.ToString,currentRow(currentColumn.ToString))]</InArgument>
                                    </InvokeMethod>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
            <Sequence DisplayName="XML - Assign unloading address details" sap:VirtualizedContainerService.HintSize="680,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign sap2010:Annotation.AnnotationText="To what element does the contant have to be saved.&#xA;And what data table to use." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="562,142" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sxl:XElement">[xeUnload]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sxl:XElement">[New XElement("Unload")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,701" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[in_dtUnload.Columns]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sd:DataColumn">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="currentColumn" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do this for each column in_in_dtUnloadingInfo" sap:VirtualizedContainerService.HintSize="526,577" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[currentRowDtUnloadingInfo(currentColumn.ToString).ToString &lt;&gt; &quot;&quot; and currentRowDtUnloadingInfo(currentColumn.ToString).ToString &lt;&gt; in_dicConfig(&quot;Empty value&quot;).ToString]" DisplayName="Check if the value is not empty" sap:VirtualizedContainerService.HintSize="484,485" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="280,298" sap2010:WorkflowViewState.IdRef="Sequence_28">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <InvokeMethod sap2010:Annotation.AnnotationText="The new element added has the title of that column.&#xA;The value is the is the the value of that column in the row." DisplayName="XML - Add new element to xeUnload" sap:VirtualizedContainerService.HintSize="238,206" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="sxl:XElement">[xeUnload]</InArgument>
                              </InvokeMethod.TargetObject>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InArgument x:TypeArguments="sxl:XElement">[new XElement(currentColumn.ToString,currentRowDtUnloadingInfo(currentColumn.ToString))]</InArgument>
                            </InvokeMethod>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,158" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="XML - Assign unload address details - mandatory" sap:VirtualizedContainerService.HintSize="431,255" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("Name",in_strUnloadingName)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeStreet]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("Street",in_strUnloadingStreet)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeCountry]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("Country",in_strUnloadingCountry)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeZipCode]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("Zipcode",in_strUnloadingZipCode)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeCity]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("City",in_strUnloadingCity)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeDate]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("Date",in_strUnloadingDate)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <ui:MultipleAssign DisplayName="XML - Assign unload address details - not mandatory" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeHouseNumber]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("HouseNbr",in_strUnloadingHouseNumber)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeReference]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[new XElement("Reference",in_strUnloadingReference)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <Assign DisplayName="XML - Initialize xeUnload" sap:VirtualizedContainerService.HintSize="431,64" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sxl:XElement">[xeUnload]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sxl:XElement" xml:space="preserve">[New XElement("Unload",
xeName,
xeStreet,
xeHouseNumber,
xeCountry,
xeZipCode,
xeCity,
xeDate,
xeReference)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
            </Sequence>
            <Sequence DisplayName="XML - Assign product details" sap:VirtualizedContainerService.HintSize="680,66" sap2010:WorkflowViewState.IdRef="Sequence_25">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign sap2010:Annotation.AnnotationText="To what element does the contant have to be saved.&#xA;And what data table to use." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="638,173" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sxl:XElement">[xeProducts]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sxl:XElement">[New XElement("Products")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_52">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dtTemp]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[in_dtProducts]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTemp]" DisplayName="For each row in_dtProducts" sap:VirtualizedContainerService.HintSize="638,1264" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do this for each row in Data Table in_dtLoadingInfo" sap:VirtualizedContainerService.HintSize="604,1149" sap2010:WorkflowViewState.IdRef="Sequence_24">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sxl:XElement" Name="xeProduct" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign sap2010:Annotation.AnnotationText="To what element does the contant have to be saved.&#xA;And what data table to use." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="562,142" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_53">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="sxl:XElement">[xeProduct]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="sxl:XElement">[New XElement("Product")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,701" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[dtTemp.Columns]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="currentColumn" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do this for each column in_dtLoadingInfo" sap:VirtualizedContainerService.HintSize="526,577" sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[currentRow(currentColumn.ToString).ToString &lt;&gt; &quot;&quot; and currentRow(currentColumn.ToString).ToString &lt;&gt; in_dicConfig(&quot;Empty value&quot;).ToString]" DisplayName="Check if the value is not empty" sap:VirtualizedContainerService.HintSize="484,485" sap2010:WorkflowViewState.IdRef="If_1">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="280,298" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InvokeMethod sap2010:Annotation.AnnotationText="The new element added has the title of that column.&#xA;The value is the is the the value of that column in the row." DisplayName="XML - Add new element to xeLoad" sap:VirtualizedContainerService.HintSize="238,206" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Add">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sxl:XElement">[xeProduct]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InArgument x:TypeArguments="sxl:XElement">[new XElement(currentColumn.ToString,currentRow(currentColumn.ToString))]</InArgument>
                                    </InvokeMethod>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <InvokeMethod DisplayName="XML - Add exLoad to xeMission" sap:VirtualizedContainerService.HintSize="562,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sxl:XElement">[xeProducts]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sxl:XElement">[xeProduct]</InArgument>
                      </InvokeMethod>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
            </Sequence>
            <Sequence DisplayName="XML - Add everything together" sap:VirtualizedContainerService.HintSize="680,748" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <InvokeMethod DisplayName="XML - Add exLoad to xeMission" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sxl:XElement">[xeMission]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[xeLoad]</InArgument>
              </InvokeMethod>
              <InvokeMethod DisplayName="Add xeUnload to xeMission" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sxl:XElement">[xeMission]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[xeUnload]</InArgument>
              </InvokeMethod>
              <InvokeMethod DisplayName="Add xeProducts to xeMission" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sxl:XElement">[xeMission]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[xeProducts]</InArgument>
              </InvokeMethod>
              <InvokeMethod DisplayName="XML - Add 'Mission' to 'Missions'" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sxl:XElement">[xeMissions]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[xeMission]</InArgument>
              </InvokeMethod>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <InvokeMethod DisplayName="XML - Add xeMissions to io_xeDossier" sap:VirtualizedContainerService.HintSize="756,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sxl:XElement">[io_xeDossier]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:Object">[xeMissions]</InArgument>
    </InvokeMethod>
  </Sequence>
</Activity>